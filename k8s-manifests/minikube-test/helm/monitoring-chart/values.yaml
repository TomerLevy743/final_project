# grafana:
#   enabled: true
#   service:
#     type: ClusterIP
#   ingress:
#     enabled: false
#   # grafana.ini:
#   #   server:
#   #     domain: status-page.org
#   #     root_url: "%(protocol)s://%(domain)s/grafana/"
#   #     serve_from_sub_path: true

#   # Persistence settings to retain data across restarts
#   persistence:
#     enabled: true
#     storageClassName: guy-tomer-storage-class
#     accessModes:
#       - ReadWriteOnce
#     size: 10Gi

#   # Admin credentials
#   adminUser: admin
#   adminPassword: admin123
# # grafana:
#   extraConfigmapMounts:
#     - name: monitoring-grafana
#       mountPath: /etc/grafana/grafana.ini
#       subPath: grafana.ini
#       configMap: monitoring-grafana
grafana:
  enabled: true
  service:
    type: ClusterIP
  ingress:
    enabled: false
  persistence:
    enabled: true
    storageClassName: guy-tomer-storage-class
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  datasources:
    elasticsearch:
      url: "https://elasticsearch-master.default.svc.cluster.local:9200" # Replace this with the ALB URL
      access: "proxy"
      basic_auth:
        enabled: true
        username: "elastic" # Provide the necessary username
        password: "admin123" # Provide the necessary password
      ssl:
        enabled: true
        skip_verify: true # Set to true only for self-signed certs
      index: "eks-logs*" # Your index pattern
      time_field_name: "@timestamp" # The field name for time-based data

  # Admin credentials
  # adminUser: admin
  # adminPassword: admin123
  # grafana:
  extraConfigmapMounts:
    - name: monitoring-grafana
      mountPath: /etc/grafana/grafana.ini
      subPath: grafana.ini
      configMap: monitoring-grafana
  # Provision grafana-dashboards-kubernetes
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "grafana-dashboards-kubernetes"
          orgId: 1
          folder: "Kubernetes"
          type: file
          disableDeletion: true
          editable: true
          options:
            path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL

  extraConfigMaps:
    - name: grafana-dashboards-k8s
      mountPath: /var/lib/grafana/dashboards/k8s
      data:
        k8s-system-api-server.json: |
          {{ .Files.Get "dashboards/k8s-system-api-server.json" | indent 4 }}
        k8s-system-coredns.json: |
          {{ .Files.Get "dashboards/k8s-system-coredns.json" | indent 4 }}
        k8s-views-global.json: |
          {{ .Files.Get "dashboards/k8s-views-global.json" | indent 4 }}
        k8s-views-namespaces.json: |
          {{ .Files.Get "dashboards/k8s-views-namespaces.json" | indent 4 }}
        k8s-views-nodes.json: |
          {{ .Files.Get "dashboards/k8s-views-nodes.json" | indent 4 }}
        k8s-views-pods.json: |
          {{ .Files.Get "dashboards/k8s-views-pods.json" | indent 4 }}
